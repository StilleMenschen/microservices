spring:
  application:
    name: oauth2-security-client
  security:
    oauth2:
      client:
        registration:
          api-client-oidc:
            provider: oauth-server
            client-id: api-client
            client-name: api-client-oidc
            client-secret: secret
            authorization-grant-type: authorization_code
            scope: openid
            redirect-uri: "http://127.0.0.1:8086/login/oauth2/code/{registrationId}"
          api-client-authorization-code:
            provider: oauth-server
            client-id: api-client
            client-name: api-client-authorization-code
            client-secret: secret
            authorization-grant-type: authorization_code
            scope: api.read
            redirect-uri: "http://127.0.0.1:8086/authorized"
        provider:
          oauth-server:
            # 利用本机IP来指定鉴权的服务, 与客户端的 IP 区别开
            issuer-uri: http://localhost:9000

api:
  base-uri: http://127.0.0.1:8087/api/books

feign:
  oauth2:
    enabled: true
    load-balanced: true
  circuitbreaker:
    enabled: true

server:
  port: 8086
  error:
    include-message: always
    include-stacktrace: never

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"